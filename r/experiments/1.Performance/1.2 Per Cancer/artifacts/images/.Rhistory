# nCores <- min(detectCores(), 4)
# cl <- makePSOCKcluster(nCores)
# registerDoParallel(cl)
#
# for (cancer in cancers) {
#   d <- train.balance_cancers(train.get_dataset("combined", cancer))
#   train_index <- createDataPartition(d$SL, p = .8,
#                                      list = FALSE,
#                                      times = 1)
#   train <- d[train_index, ]
#   test <- d[-train_index, ]
#   preProcValues <- caret::preProcess(train[5:ncol(train)], method = c("center", "scale", "nzv"))
#   train <- cbind(train[1:4], predict(preProcValues, train[5:ncol(train)]))
#   test <- cbind(test[1:4], predict(preProcValues, test[5:ncol(test)]))
#   f <- train.get_formula(train)
#   models <- list()
#   models[["L0L2"]] <- train.l0l2(train[5:ncol(train)], train$SL)
#   models[["Elastic Net"]] <- train.logr(train, f)
#   models$MUVR <- train.MUVR(train)
#   log.plot_var_importance_and_ale_plots(models, test, cancer)
# }
#
# stopCluster(cl)
# registerDoSEQ()
project_dir <- "~/repos/SBSL-modelling-and-analysis/"
working_dir <- paste0(project_dir, "r/experiments/1.Performance/1.3 Dataset Cross Comparison/artifacts/images")
setwd(working_dir)
source(paste0(project_dir, "r/utils/train-model.R"))
library(ggplot2)
library(reshape2)
gen_heatmap <- function(labels, g) {
m <- matrix(FALSE, nrow = length(g), ncol = length(g));
colnames(m) <- g
row.names(m) <- g
m[as.matrix(labels[1:2])] <- TRUE
m[as.matrix(labels[2:1])] <- TRUE
melted <- melt(m)
p1 <- ggplot(melted, aes(x = Var2, y = Var1, fill = value)) + geom_tile() +
scale_fill_manual(values = c("white", "black")) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
p1
}
gen_heatmap_2 <- function(labels1, d1, labels2, d2, g, colors) {
m <- matrix("None", nrow = length(g), ncol = length(g));
colnames(m) <- g
row.names(m) <- g
m[as.matrix(labels1[1:2])] <- d1
m[as.matrix(labels1[2:1])] <- d1
m[as.matrix(labels2[1:2])] <- ifelse(m[as.matrix(labels2[1:2])] == d1, "Both", d2)
m[as.matrix(labels2[2:1])] <- ifelse(m[as.matrix(labels2[2:1])] == d1, "Both", d2)
m <- matrix(factor(m, levels = c("None", "Both", "discoverSL", "isle")), nrow = length(g))
m <- m[1:400, 1:400]
melted <- melt(m)
p1 <- ggplot(melted, aes(x = Var2, y = Var1, fill = as.factor(value))) + geom_tile() +
scale_fill_manual(values =  colors) + xlab("Genes") + ylab("Genes") +
theme(legend.position = "bottom",
legend.title = element_blank(),
legend.text = element_text(size = 8),
axis.title.x = element_text(size = 8),
axis.title.y = element_text(size = 8),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
p1
}
print("LUAD: Train on DiscoverSL, Test on ISLE")
isle_C <- train.get_dataset("isle", "LUAD")[c(1,2,4)]
discoversl_C <- train.get_dataset("discoversl", "LUAD")[c(1,2,4)]
genes <- Reduce(union, c(isle_C$gene1, isle_C$gene2, discoversl_C$gene1, discoversl_C$gene2))
print(paste0(length(intersect(union(isle_C$gene1, isle_C$gene2), union(discoversl_C$gene1, discoversl_C$gene2))), " genes in common in LUAD"))
plot(gen_heatmap_2(discoversl_C, "discoverSL", isle_C, "isle", genes, c("black", "red", "white", "blue")))
ggsave("xdata_LUAD.png", gg1, width = 17, height = 12, units = "cm")
print("BRCA: Train on ISLE, Test on DiscoverSL")
isle_C <- train.get_dataset("isle", "BRCA")[c(1,2,4)]
discoversl_C <- train.get_dataset("discoversl", "BRCA")[c(1,2,4)]
genes <- Reduce(union, c(isle_C$gene1, isle_C$gene2, discoversl_C$gene1, discoversl_C$gene2))
print(paste0(length(intersect(union(isle_C$gene1, isle_C$gene2), union(discoversl_C$gene1, discoversl_C$gene2))), "genes in common in BRCA"))
plot(gen_heatmap_2(discoversl_C, "discoverSL", isle_C, "isle", genes, c("blue", "black", "red", "white")))
ggsave("xdata_BRCA.png", gg1, width = 17, height = 12, units = "cm")
print("LUAD: Train on DiscoverSL, Test on ISLE")
isle_C <- train.get_dataset("isle", "LUAD")[c(1,2,4)]
discoversl_C <- train.get_dataset("discoversl", "LUAD")[c(1,2,4)]
genes <- Reduce(union, c(isle_C$gene1, isle_C$gene2, discoversl_C$gene1, discoversl_C$gene2))
print(paste0(length(intersect(union(isle_C$gene1, isle_C$gene2), union(discoversl_C$gene1, discoversl_C$gene2))), " genes in common in LUAD"))
hmp1 <- gen_heatmap_2(discoversl_C, "discoverSL", isle_C, "isle", genes, c("black", "red", "white", "blue"))
ggsave("xdata_LUAD.png", hmp1, width = 17, height = 12, units = "cm")
print("BRCA: Train on ISLE, Test on DiscoverSL")
isle_C <- train.get_dataset("isle", "BRCA")[c(1,2,4)]
discoversl_C <- train.get_dataset("discoversl", "BRCA")[c(1,2,4)]
genes <- Reduce(union, c(isle_C$gene1, isle_C$gene2, discoversl_C$gene1, discoversl_C$gene2))
print(paste0(length(intersect(union(isle_C$gene1, isle_C$gene2), union(discoversl_C$gene1, discoversl_C$gene2))), "genes in common in BRCA"))
hmp2 <- gen_heatmap_2(discoversl_C, "discoverSL", isle_C, "isle", genes, c("blue", "black", "red", "white"))
ggsave("xdata_BRCA.png", hmp2, width = 17, height = 12, units = "cm")
print("LUAD: Train on DiscoverSL, Test on ISLE")
isle_C <- train.get_dataset("isle", "LUAD")[c(1,2,4)]
discoversl_C <- train.get_dataset("discoversl", "LUAD")[c(1,2,4)]
genes <- Reduce(union, c(isle_C$gene1, isle_C$gene2, discoversl_C$gene1, discoversl_C$gene2))
print(paste0(length(intersect(union(isle_C$gene1, isle_C$gene2), union(discoversl_C$gene1, discoversl_C$gene2))), " genes in common in LUAD"))
hmp1 <- gen_heatmap_2(discoversl_C, "discoverSL", isle_C, "isle", genes, c("black", "red", "white", "blue"))
ggsave("xdata_LUAD.png", hmp1, width = 8, height = 9, units = "cm")
print("BRCA: Train on ISLE, Test on DiscoverSL")
isle_C <- train.get_dataset("isle", "BRCA")[c(1,2,4)]
discoversl_C <- train.get_dataset("discoversl", "BRCA")[c(1,2,4)]
genes <- Reduce(union, c(isle_C$gene1, isle_C$gene2, discoversl_C$gene1, discoversl_C$gene2))
print(paste0(length(intersect(union(isle_C$gene1, isle_C$gene2), union(discoversl_C$gene1, discoversl_C$gene2))), "genes in common in BRCA"))
hmp2 <- gen_heatmap_2(discoversl_C, "discoverSL", isle_C, "isle", genes, c("blue", "black", "red", "white"))
ggsave("xdata_BRCA.png", hmp2, width = 8, height = 9, units = "cm")
project_dir <- "~/repos/SBSL-modelling-and-analysis/"
working_dir <- paste0(project_dir, "r/experiments/1.Performance/1.8 Dep Scores/artifacts/images")
setwd(working_dir)
source(paste0(project_dir, "r/utils/logging.R"))
source(paste0(project_dir, "r/utils/train-model.R"))
library(doParallel)
library(foreach)
library(caret)
data <- readRDS("../run_data.Rdata")
title <- "Dependency scores model comparison"
V <- 10
plots <- log.average_roc_curve_comparisons(data$preds, data$labels,
filename = "dep_scores",
title = title)
plots$boxp
paired.cols <- brewer.pal(8, "Paired")
plots$boxp + scale_color_manual(values=paired.cols) scale_fill_manual(values=paired.cols)
plots$boxp + scale_color_manual(values=paired.cols) + scale_fill_manual(values=paired.cols)
ggsave("dep_box_plots.png", boxp2, width = 8, height = 10, units = "cm")
boxp2 <- plots$boxp + scale_color_manual(values=paired.cols) + scale_fill_manual(values=paired.cols)
ggsave("dep_box_plots.png", boxp2, width = 8, height = 10, units = "cm")
ggsave("dep_box_plots.png", boxp2, width = 8, height = 10, units = "cm")
project_dir <- "~/repos/SBSL-modelling-and-analysis/"
working_dir <- paste0(project_dir, "r/experiments/1.Performance/1.8 Dep Scores/artifacts/images")
setwd(working_dir)
source(paste0(project_dir, "r/utils/logging.R"))
source(paste0(project_dir, "r/utils/train-model.R"))
library(doParallel)
library(foreach)
library(caret)
data <- readRDS("../run_data.Rdata")
title <- "Dependency scores model comparison"
V <- 10
plots <- log.average_roc_curve_comparisons(data$preds, data$labels,
filename = "dep_scores",
title = title)
boxp2 <- plots$boxp + scale_color_manual(values=paired.cols) + scale_fill_manual(values=paired.cols)
boxp2
project_dir <- "~/repos/SBSL-modelling-and-analysis/"
working_dir <- paste0(project_dir, "r/experiments/1.Performance/1.8 Dep Scores/artifacts/images")
setwd(working_dir)
source(paste0(project_dir, "r/utils/logging.R"))
source(paste0(project_dir, "r/utils/train-model.R"))
library(doParallel)
library(foreach)
library(caret)
data <- readRDS("../run_data.Rdata")
title <- "Dependency scores model comparison"
V <- 10
plots <- log.average_roc_curve_comparisons(data$preds, data$labels,
filename = "dep_scores",
title = title)
boxp2 <- plots$boxp + scale_color_manual(values=paired.cols) + scale_fill_manual(values=paired.cols)
boxp2
boxp2 <- plots$boxp + scale_color_manual(values=paired.cols) + scale_fill_manual(values=paired.cols) + theme(title = element_blank())
boxp2
boxp2 <- plots$boxp + scale_color_manual(values=paired.cols) + scale_fill_manual(values=paired.cols) + theme(plot.title = element_blank())
boxp2
boxp2 <- plots$boxp + scale_color_manual(values=paired.cols) + scale_fill_manual(values=paired.cols) + theme(plot.title = element_blank())
boxp2
ggsave("dep_box_plots.png", boxp2, width = 8, height = 10, units = "cm")
boxp2 <- plots$boxp + scale_color_manual(values=paired.cols) + scale_fill_manual(values=paired.cols) + theme(plot.title = element_blank()) + guides(color = guide_legend(ncol=2))
boxp2
ggsave("dep_box_plots.png", boxp2, width = 8, height = 10, units = "cm")
ggsave("dep_box_plots.png", boxp2, width = 8, height = 7, units = "cm")
create_latex_tables <- function(filename, tables) {
for (d in c("ROC", "PRC", "nCGD")) {
d_mean <- paste0(d, "_mean")
d_sd <- paste0(d, "_sd")
formatted_list <- list()
for (cancer in cancers) {
auc_mean <- tables[[cancer]][[d_mean]]
auc_sd <- tables[[cancer]][[d_sd]]
r <- paste0("$", round(auc_mean, 2), "\\pm",round(auc_sd, 2), "$")
names(r) <- tables[[cancer]]$Model
formatted_list[[cancer]] <- r
}
ggtable <- data.frame(bind_cols(formatted_list))
rownames(ggtable) <- names(r)
latex_table <- xtable(ggtable)
a <- print(xtable(ggtable[order(names(r)), ]), display = c("s", "f", "f", "f", "f"), sanitize.text.function=identity)
sink(paste0(filename, d, ".txt"))
cat(str_replace_all(a, "0[.]", "."))
sink()
}
}
project_dir <- "~/repos/SBSL-modelling-and-analysis/"
working_dir <- paste0(project_dir, "r/experiments/1.Performance/1.2 Per Cancer/artifacts/images")
setwd(working_dir)
source(paste0(project_dir, "r/utils/logging.R"))
source(paste0(project_dir, "r/utils/train-model.R"))
library(caret)
library(pROC)
library(foreach)
library(ggpubr)
library(xtable)
cancers <- c("BRCA", "COAD", "LUAD", "OV")
plots <- list()
tables <- list()
for (cancer in cancers) {
predictions <- list()
for (w in c("single", "baselines")) {
p <- readRDS(paste0("../", cancer, "_", w, "_predictions.Rdata"))
predictions$labels <- p$labels
predictions$preds <- c(predictions$preds, p$preds)
}
print(cancer)
for (p in predictions$preds) { print(length(p))}
#
# model_names <- names(predictions$preds)[1:8]
# models <- list()
# for (nm in model_names) {
#   models[[nm]] <- readRDS(paste0("../", cancer,"_",nm,".Rdata"))
# }
#
title <- cancer
filename <- cancer
preds <- predictions$preds
labels <- predictions$labels
V <- length(preds$`pca-gCMF`)
plots[[cancer]] <- log.average_roc_curve_comparisons(preds,
labels,
filename = filename,
title = title)
# log.logr.regularisation_curves(models$`Elastic Net`,
#                                filename = filename,
#                                title = title)
# print(cancer)
# print(models$L0L2[[1]]$fit$varnames)
# for (m in models$L0L2) {
#   print(plot(m$fit, gamma = m$optimalGamma))
#   a <- print(m)
#   print(a[a$lambda == m$optimalLambda & a$gamma == m$optimalGamma, ])
# }
}
#extract legend
#https://github.com/hadley/ggplot2/wiki/Share-a-legend-between-two-ggplot2-graphs
g_legend<-function(a.gplot){
tmp <- ggplot_gtable(ggplot_build(a.gplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
return(legend)}
mylegend <- g_legend(plots$BRCA$boxp)
gg1 <- ggarrange(plots$BRCA$rocp + theme(legend.position="none", axis.text.x=element_blank(), axis.ticks.x=element_blank()),
plots$LUAD$rocp + theme(legend.position="none", axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.y=element_blank(), axis.ticks.y=element_blank(), axis.text.y=element_blank()),
plots$COAD$rocp + theme(legend.position="none", axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.y=element_blank(), axis.ticks.y=element_blank(), axis.text.y=element_blank()),
plots$OV$rocp + theme(legend.position="none", axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.y=element_blank(), axis.ticks.y=element_blank(), axis.text.y=element_blank()),
plots$BRCA$prcp + theme(legend.position="none"),
plots$LUAD$prcp + theme(legend.position="none", axis.title.y=element_blank(), axis.ticks.y=element_blank(), axis.text.y=element_blank()),
plots$COAD$prcp + theme(legend.position="none", axis.title.y=element_blank(), axis.ticks.y=element_blank(), axis.text.y=element_blank()),
plots$OV$prcp + theme(legend.position="none", axis.title.y=element_blank(), axis.ticks.y=element_blank(), axis.text.y=element_blank()),
ncol = 4, nrow = 2, legend = "bottom", common.legend = T, widths = c(1.2, 1, 1, 1))
plot(gg1)
ggsave("combined_roc_prc.png", gg1, width = 17, height = 12, units = "cm")
create_latex_tables <- function(filename, tables) {
for (d in c("ROC", "PRC", "nCGD")) {
d_mean <- paste0(d, "_mean")
d_sd <- paste0(d, "_sd")
formatted_list <- list()
for (cancer in cancers) {
auc_mean <- tables[[cancer]][[d_mean]]
auc_sd <- tables[[cancer]][[d_sd]]
r <- paste0("$", round(auc_mean, 2), "\\pm",round(auc_sd, 2), "$")
names(r) <- tables[[cancer]]$Model
formatted_list[[cancer]] <- r
}
ggtable <- data.frame(bind_cols(formatted_list))
rownames(ggtable) <- names(r)
latex_table <- xtable(ggtable)
a <- print(xtable(ggtable[order(names(r)), ]), display = c("s", "f", "f", "f", "f"), sanitize.text.function=identity)
sink(paste0(filename, d, ".txt"))
cat(str_replace_all(a, "0[.]", "."))
sink()
}
}
create_latex_tables("single", tables)
for (cancer in cancers) {
predictions <- list()
for (w in c("single", "baselines")) {
p <- readRDS(paste0("../", cancer, "_", w, "_predictions.Rdata"))
predictions$labels <- p$labels
predictions$preds <- c(predictions$preds, p$preds)
}
print(cancer)
for (p in predictions$preds) { print(length(p))}
#
# model_names <- names(predictions$preds)[1:8]
# models <- list()
# for (nm in model_names) {
#   models[[nm]] <- readRDS(paste0("../", cancer,"_",nm,".Rdata"))
# }
#
title <- cancer
filename <- cancer
preds <- predictions$preds
labels <- predictions$labels
V <- length(preds$`pca-gCMF`)
plots[[cancer]] <- log.average_roc_curve_comparisons(preds,
labels,
filename = filename,
title = title)
tables[[cancer]] <- print(log.print_results(preds,
labels,
filename = filename,
title = title))
# log.logr.regularisation_curves(models$`Elastic Net`,
#                                filename = filename,
#                                title = title)
# print(cancer)
# print(models$L0L2[[1]]$fit$varnames)
# for (m in models$L0L2) {
#   print(plot(m$fit, gamma = m$optimalGamma))
#   a <- print(m)
#   print(a[a$lambda == m$optimalLambda & a$gamma == m$optimalGamma, ])
# }
}
create_latex_tables("single", tables)
tables <- list()
for (cancer in cancers) {
predictions <- list()
for (w in c("all", "unbalanced")) {
p <- readRDS(paste0("../", cancer, "_", w, "_predictions.Rdata"))
predictions$labels <- p$labels
predictions$preds <- c(predictions$preds, p$preds)
}
title <- cancer
filename <- cancer
preds <- predictions$preds
labels <- predictions$labels
V <- length(preds$`pca-gCMF`)
tables[[cancer]] <- print(log.print_results(preds,
labels,
filename = filename,
title = title))
}
for (cancer in cancers) {
predictions <- list()
for (w in c("all")) {
p <- readRDS(paste0("../", cancer, "_", w, "_predictions.Rdata"))
predictions$labels <- p$labels
predictions$preds <- c(predictions$preds, p$preds)
}
title <- cancer
filename <- cancer
preds <- predictions$preds
labels <- predictions$labels
V <- length(preds$`pca-gCMF`)
tables[[cancer]] <- print(log.print_results(preds,
labels,
filename = filename,
title = title))
}
p <- readRDS(paste0("../", cancer, "_", w, "_predictions.Rdata"))
predictions$labels <- p$labels
predictions$preds <- c(predictions$preds, p$preds)
V <- length(preds$`Elastic Net (All)`)
for (cancer in cancers) {
predictions <- list()
for (w in c("all")) {
p <- readRDS(paste0("../", cancer, "_", w, "_predictions.Rdata"))
predictions$labels <- p$labels
predictions$preds <- c(predictions$preds, p$preds)
}
title <- cancer
filename <- cancer
preds <- predictions$preds
labels <- predictions$labels
V <- length(preds$`Elastic Net (All)`)
tables[[cancer]] <- print(log.print_results(preds,
labels,
filename = filename,
title = title))
}
create_latex_tables("all", tables)
create_latex_tables <- function(filename, tables) {
for (d in c("ROC", "PRC", "nCGD")) {
d_mean <- paste0(d, "_mean")
d_sd <- paste0(d, "_sd")
formatted_list <- list()
for (cancer in cancers) {
auc_mean <- tables[[cancer]][[d_mean]]
auc_sd <- tables[[cancer]][[d_sd]]
r <- paste0("$", round(auc_mean, 2), "\\pm",round(auc_sd, 2), "$")
names(r) <- tables[[cancer]]$Model
formatted_list[[cancer]] <- r
}
ggtable <- data.frame(bind_cols(formatted_list))
rownames(ggtable) <- names(r)
latex_table <- xtable(ggtable)
a <- print(xtable(ggtable[order(names(r)), ]), display = c("s", "f", "f", "f", "f"), sanitize.text.function=identity)
sink(paste0(filename, d, ".txt"))
cat(ggtable)
cat(str_replace_all(a, "0[.]", "."))
sink()
}
}
tables <- list()
for (cancer in cancers) {
predictions <- list()
for (w in c("all", "unbalanced")) {
p <- readRDS(paste0("../", cancer, "_", w, "_predictions.Rdata"))
predictions$labels <- p$labels
predictions$preds <- c(predictions$preds, p$preds)
}
title <- cancer
filename <- cancer
preds <- predictions$preds
labels <- predictions$labels
V <- length(preds$`Elastic Net (All)`)
tables[[cancer]] <- print(log.print_results(preds,
labels,
filename = filename,
title = title))
}
create_latex_tables("all", tables)
create_latex_tables <- function(filename, tables) {
for (d in c("ROC", "PRC", "nCGD")) {
d_mean <- paste0(d, "_mean")
d_sd <- paste0(d, "_sd")
formatted_list <- list()
for (cancer in cancers) {
auc_mean <- tables[[cancer]][[d_mean]]
auc_sd <- tables[[cancer]][[d_sd]]
r <- paste0("$", round(auc_mean, 2), "\\pm",round(auc_sd, 2), "$")
names(r) <- tables[[cancer]]$Model
formatted_list[[cancer]] <- r
}
ggtable <- data.frame(bind_cols(formatted_list))
rownames(ggtable) <- names(r)
latex_table <- xtable(ggtable)
a <- print(xtable(ggtable[order(names(r)), ]), display = c("s", "f", "f", "f", "f"), sanitize.text.function=identity)
sink(paste0(filename, d, ".txt"))
print(ggtable)
cat(str_replace_all(a, "0[.]", "."))
sink()
}
}
create_latex_tables("all", tables)
create_latex_tables <- function(filename, tables) {
for (d in c("ROC", "PRC", "nCGD")) {
d_mean <- paste0(d, "_mean")
d_sd <- paste0(d, "_sd")
formatted_list <- list()
for (cancer in cancers) {
auc_mean <- tables[[cancer]][[d_mean]]
auc_sd <- tables[[cancer]][[d_sd]]
r <- paste0("$", round(auc_mean, 2), "\\pm",round(auc_sd, 2), "$")
names(r) <- tables[[cancer]]$Model
formatted_list[[cancer]] <- r
}
ggtable <- data.frame(bind_cols(formatted_list))
rownames(ggtable) <- names(r)
latex_table <- xtable(ggtable)
a <- print(xtable(ggtable[order(names(r)), ]), display = c("s", "f", "f", "f", "f"), sanitize.text.function=identity)
sink(paste0(filename, d, ".txt"))
cat(str_replace_all(a, "0[.]", "."))
sink()
}
}
create_latex_tables("all", tables)
tables <- list()
for (cancer in cancers) {
predictions <- list()
for (w in c("all", "unbalanced")) {
p <- readRDS(paste0("../", cancer, "_", w, "_predictions.Rdata"))
predictions$labels <- p$labels
predictions$preds <- c(predictions$preds, p$preds)
}
title <- cancer
filename <- cancer
preds <- predictions$preds
labels <- predictions$labels
V <- length(preds$`Elastic Net (All)`)
tables[[cancer]] <- print(log.print_results(preds,
labels,
filename = filename,
title = title))
}
create_latex_tables("all", tables)
sink()
tables <- list()
for (cancer in cancers) {
predictions <- list()
for (w in c("all", "unbalanced")) {
p <- readRDS(paste0("../", cancer, "_", w, "_predictions.Rdata"))
predictions$labels <- p$labels
predictions$preds <- c(predictions$preds, p$preds)
}
title <- cancer
filename <- cancer
preds <- predictions$preds
labels <- predictions$labels
V <- length(preds$`Elastic Net (All)`)
tables[[cancer]] <- print(log.print_results(preds,
labels,
filename = filename,
title = title))
}
create_latex_tables("all", tables)
