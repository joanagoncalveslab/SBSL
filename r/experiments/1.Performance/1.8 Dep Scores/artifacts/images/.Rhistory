axis.title.y = element_blank(),
axis.text = element_text(size=10),
legend.position = "none")
}
# pL0L2 <- plot_varImp_bar_chart(data1[data1$models == "L0L2", ])
# pEN <- plot_varImp_bar_chart(data1[data1$models == "Elastic Net", ])
# pMUVR <- plot_varImp_bar_chart(data1[data1$models == "MUVR", ])
# pRRF <- plot_varImp_bar_chart(data1[data1$models == "RRF", ])
#
#
# gg1 <- ggarrange(pL0L2, pEN, pMUVR, pRRF,
#                  ncol = 2, nrow = 2)
gg1 <- plot_varImp_bar_chart(data1)
plot(gg1)
reorder_within <- function(x, by, within, fun = max, sep = "___", ...) {
new_x <- paste(x, within, sep = sep)
stats::reorder(new_x, by, FUN = fun)
}
plot_varImp_bar_chart <- function (data) {
# Graph
ggplot(data, aes(color=variables, y=value, x=reorder_within(variables, value, models))) +
geom_point() +
geom_hline(yintercept=1, color="grey55", linetype="dashed") +
geom_errorbar(aes(ymin=value-sd, ymax=value+sd), width=.2,
position=position_dodge(0.05)) +
facet_wrap(~models, nrow = 2, ncol = 2, scales = "free_y") +
xlab("") +
scale_color_manual(values=log.many_cols) +
coord_flip() + theme_Publication() +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text = element_text(size=10),
legend.position = "none")
}
# pL0L2 <- plot_varImp_bar_chart(data1[data1$models == "L0L2", ])
# pEN <- plot_varImp_bar_chart(data1[data1$models == "Elastic Net", ])
# pMUVR <- plot_varImp_bar_chart(data1[data1$models == "MUVR", ])
# pRRF <- plot_varImp_bar_chart(data1[data1$models == "RRF", ])
#
#
# gg1 <- ggarrange(pL0L2, pEN, pMUVR, pRRF,
#                  ncol = 2, nrow = 2)
gg1 <- plot_varImp_bar_chart(data1)
plot(gg1)
reorder_within <- function(x, by, within, fun = max, sep = "___", ...) {
# new_x <- paste(x, within, sep = sep)
stats::reorder(x, by, FUN = fun)
}
plot_varImp_bar_chart <- function (data) {
# Graph
ggplot(data, aes(color=variables, y=value, x=reorder_within(variables, value, models))) +
geom_point() +
geom_hline(yintercept=1, color="grey55", linetype="dashed") +
geom_errorbar(aes(ymin=value-sd, ymax=value+sd), width=.2,
position=position_dodge(0.05)) +
facet_wrap(~models, nrow = 2, ncol = 2, scales = "free_y") +
xlab("") +
scale_color_manual(values=log.many_cols) +
coord_flip() + theme_Publication() +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text = element_text(size=10),
legend.position = "none")
}
# pL0L2 <- plot_varImp_bar_chart(data1[data1$models == "L0L2", ])
# pEN <- plot_varImp_bar_chart(data1[data1$models == "Elastic Net", ])
# pMUVR <- plot_varImp_bar_chart(data1[data1$models == "MUVR", ])
# pRRF <- plot_varImp_bar_chart(data1[data1$models == "RRF", ])
#
#
# gg1 <- ggarrange(pL0L2, pEN, pMUVR, pRRF,
#                  ncol = 2, nrow = 2)
gg1 <- plot_varImp_bar_chart(data1)
plot(gg1)
reorder_within <- function(x, by, within, fun = max, sep = "___", ...) {
new_x <- paste(x, within, sep = sep)
stats::reorder(new_x, by, FUN = fun)
}
scale_y_reordered <- function(..., sep = "___") {
reg <- paste0(sep, ".+$")
ggplot2::scale_y_discrete(labels = function(x) gsub(reg, "", x), ...)
}
plot_varImp_bar_chart <- function (data) {
# Graph
ggplot(data, aes(color=variables, y=value, x=reorder_within(variables, value, models))) +
geom_point() +
geom_hline(yintercept=1, color="grey55", linetype="dashed") +
geom_errorbar(aes(ymin=value-sd, ymax=value+sd), width=.2,
position=position_dodge(0.05)) +
scale_y_reordered() +
facet_wrap(~models, nrow = 2, ncol = 2, scales = "free_y") +
xlab("") +
scale_color_manual(values=log.many_cols) +
coord_flip() + theme_Publication() +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text = element_text(size=10),
legend.position = "none")
}
# pL0L2 <- plot_varImp_bar_chart(data1[data1$models == "L0L2", ])
# pEN <- plot_varImp_bar_chart(data1[data1$models == "Elastic Net", ])
# pMUVR <- plot_varImp_bar_chart(data1[data1$models == "MUVR", ])
# pRRF <- plot_varImp_bar_chart(data1[data1$models == "RRF", ])
#
#
# gg1 <- ggarrange(pL0L2, pEN, pMUVR, pRRF,
#                  ncol = 2, nrow = 2)
gg1 <- plot_varImp_bar_chart(data1)
plot(gg1)
plot_varImp_bar_chart <- function (data) {
# Graph
ggplot(data, aes(color=variables, y=value, x=reorder_within(variables, value, models))) +
geom_point() +
geom_hline(yintercept=1, color="grey55", linetype="dashed") +
geom_errorbar(aes(ymin=value-sd, ymax=value+sd), width=.2,
position=position_dodge(0.05)) +
scale_y_reordered() +
facet_wrap(~models, nrow = 2, ncol = 2, scales = "free_y") +
xlab("") +
scale_color_manual(values=log.many_cols) +
coord_flip() + theme_Publication() +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text = element_text(size=10),
legend.position = "none")
}
scale_x_reordered <- function(..., sep = "___") {
reg <- paste0(sep, ".+$")
ggplot2::scale_y_discrete(labels = function(x) gsub(reg, "", x), ...)
}
plot_varImp_bar_chart <- function (data) {
# Graph
ggplot(data, aes(color=variables, y=value, x=reorder_within(variables, value, models))) +
geom_point() +
geom_hline(yintercept=1, color="grey55", linetype="dashed") +
geom_errorbar(aes(ymin=value-sd, ymax=value+sd), width=.2,
position=position_dodge(0.05)) +
scale_x_reordered() +
facet_wrap(~models, nrow = 2, ncol = 2, scales = "free_y") +
xlab("") +
scale_color_manual(values=log.many_cols) +
coord_flip() + theme_Publication() +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text = element_text(size=10),
legend.position = "none")
}
# pL0L2 <- plot_varImp_bar_chart(data1[data1$models == "L0L2", ])
# pEN <- plot_varImp_bar_chart(data1[data1$models == "Elastic Net", ])
# pMUVR <- plot_varImp_bar_chart(data1[data1$models == "MUVR", ])
# pRRF <- plot_varImp_bar_chart(data1[data1$models == "RRF", ])
#
#
# gg1 <- ggarrange(pL0L2, pEN, pMUVR, pRRF,
#                  ncol = 2, nrow = 2)
gg1 <- plot_varImp_bar_chart(data1)
plot(gg1)
reorder_within <- function(x, by, within, fun = max, sep = "___", ...) {
new_x <- paste(x, within, sep = sep)
stats::reorder(new_x, by, FUN = fun)
}
scale_x_reordered <- function(..., sep = "___") {
reg <- paste0(sep, ".+$")
ggplot2::scale_y_discrete(labels = function(x) gsub(reg, "", x), ...)
}
plot_varImp_bar_chart <- function (data) {
# Graph
ggplot(data, aes(color=variables, y=value, x=reorder_within(variables, value, models))) +
geom_point() +
geom_hline(yintercept=1, color="grey55", linetype="dashed") +
geom_errorbar(aes(ymin=value-sd, ymax=value+sd), width=.2,
position=position_dodge(0.05)) +
scale_x_reordered() +
facet_wrap(~models, nrow = 2, ncol = 2, scales = "free_y") +
xlab("") +
scale_color_manual(values=log.many_cols) +
# coord_flip() + theme_Publication() +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text = element_text(size=10),
legend.position = "none")
}
# pL0L2 <- plot_varImp_bar_chart(data1[data1$models == "L0L2", ])
# pEN <- plot_varImp_bar_chart(data1[data1$models == "Elastic Net", ])
# pMUVR <- plot_varImp_bar_chart(data1[data1$models == "MUVR", ])
# pRRF <- plot_varImp_bar_chart(data1[data1$models == "RRF", ])
#
#
# gg1 <- ggarrange(pL0L2, pEN, pMUVR, pRRF,
#                  ncol = 2, nrow = 2)
gg1 <- plot_varImp_bar_chart(data1)
plot(gg1)
reorder_within <- function(x, by, within, fun = max, sep = "___", ...) {
new_x <- paste(x, within, sep = sep)
stats::reorder(new_x, by, FUN = fun)
}
scale_x_reordered <- function(..., sep = "___") {
reg <- paste0(sep, ".+$")
ggplot2::scale_y_discrete(labels = function(x) gsub(reg, "", x), ...)
}
plot_varImp_bar_chart <- function (data) {
# Graph
ggplot(data, aes(color=variables, y=value, x=reorder_within(variables, value, models))) +
geom_point() +
geom_hline(yintercept=1, color="grey55", linetype="dashed") +
geom_errorbar(aes(ymin=value-sd, ymax=value+sd), width=.2,
position=position_dodge(0.05)) +
scale_x_reordered() +
facet_wrap(~models, nrow = 2, ncol = 2, scales = "free_y") +
xlab("") +
scale_color_manual(values=log.many_cols) +
coord_flip() + theme_Publication() +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text = element_text(size=10),
legend.position = "none")
}
# pL0L2 <- plot_varImp_bar_chart(data1[data1$models == "L0L2", ])
# pEN <- plot_varImp_bar_chart(data1[data1$models == "Elastic Net", ])
# pMUVR <- plot_varImp_bar_chart(data1[data1$models == "MUVR", ])
# pRRF <- plot_varImp_bar_chart(data1[data1$models == "RRF", ])
#
#
# gg1 <- ggarrange(pL0L2, pEN, pMUVR, pRRF,
#                  ncol = 2, nrow = 2)
gg1 <- plot_varImp_bar_chart(data1)
plot(gg1)
scale_x_reordered <- function(..., sep = "___") {
reg <- paste0(sep, ".+$")
ggplot2::scale_x_discrete(labels = function(x) gsub(reg, "", x), ...)
}
plot_varImp_bar_chart <- function (data) {
# Graph
ggplot(data, aes(color=variables, y=value, x=reorder_within(variables, value, models))) +
geom_point() +
geom_hline(yintercept=1, color="grey55", linetype="dashed") +
geom_errorbar(aes(ymin=value-sd, ymax=value+sd), width=.2,
position=position_dodge(0.05)) +
scale_x_reordered() +
facet_wrap(~models, nrow = 2, ncol = 2, scales = "free_y") +
xlab("") +
scale_color_manual(values=log.many_cols) +
coord_flip() + theme_Publication() +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text = element_text(size=10),
legend.position = "none")
}
# pL0L2 <- plot_varImp_bar_chart(data1[data1$models == "L0L2", ])
# pEN <- plot_varImp_bar_chart(data1[data1$models == "Elastic Net", ])
# pMUVR <- plot_varImp_bar_chart(data1[data1$models == "MUVR", ])
# pRRF <- plot_varImp_bar_chart(data1[data1$models == "RRF", ])
#
#
# gg1 <- ggarrange(pL0L2, pEN, pMUVR, pRRF,
#                  ncol = 2, nrow = 2)
gg1 <- plot_varImp_bar_chart(data1)
plot(gg1)
ggsave("LUAD_dep_scores_all_var_imp.png", gg1, width = 20, height = 20, units = "cm")
ggsave("LUAD_dep_scores_all_var_imp.pdf", gg1, width = 20, height = 20, units = "cm")
registerDoSEQ()
cancers <- c("BRCA")
data <- train.balance_cancers(train.get_dataset("combined", cancers))
data$MUTEX <- NULL
vars <- colnames(data)
vars_no_dep <- vars[!grepl("(RNAi|CRISPR)", vars)]
cols_no_dep <- which(colnames(data) %in% vars_no_dep)
train_index <- createDataPartition(data$SL, p = .8,
list = FALSE,
times = 1)
train <- data[train_index, cols_no_dep]
test <- data[-train_index, cols_no_dep]
preProcValues <- caret::preProcess(train[5:ncol(train)], method = c("center", "scale", "nzv"))
train <- cbind(train[1:4], predict(preProcValues, train[5:ncol(train)]))
test <- cbind(test[1:4], predict(preProcValues, test[5:ncol(test)]))
f <- train.get_formula(train)
#glmnet
models <- list()
models[["L0L2"]] <- train.l0l2(train[5:ncol(train)], train$SL)
models[["Elastic Net"]] <- train.logr(train, f)
models$MUVR <- train.MUVR(train)
models[["Random Forest"]] <- train.RRF(train, f)
imps <- list()
imps[["LOL2"]] <- log.plot_var_importance_and_ale_plots(models[["L0L2"]], test, "All", TRUE)
imps[["Elastic Net"]] <- log.plot_var_importance_and_ale_plots(models[["Elastic Net"]], test, "All", FALSE)
imps[["RRF"]] <- log.plot_var_importance_and_ale_plots(models[["Random Forest"]], test, "All", FALSE)
imps[["MUVR"]] <- log.plot_var_importance_and_ale_plots(models$MUVR$Fit$rfFitMax, test, "All", FALSE)
variables <- as.factor(c(imps$LOL2$feature, imps$`Elastic Net`$feature, imps$MUVR$feature, imps$RRF$feature))
models <- c(rep("L0L2" , nrow(imps$LOL2)), rep("Elastic Net" , nrow(imps$`Elastic Net`)), rep("MUVR" , nrow(imps$MUVR)), rep("RRF" , nrow(imps$RRF)))
value <- c(imps$LOL2$importance, imps$`Elastic Net`$importance, imps$MUVR$importance, imps$RRF$importance)
sd <- c(imps$LOL2$importance.95 - imps$LOL2$importance.05,
imps$`Elastic Net`$importance.95 - imps$`Elastic Net`$importance.05,
imps$MUVR$importance.95 - imps$MUVR$importance.05,
imps$RRF$importance.95 - imps$RRF$importance.05)
data1 <- data.frame(models,variables,value, sd)
reorder_within <- function(x, by, within, fun = max, sep = "___", ...) {
new_x <- paste(x, within, sep = sep)
stats::reorder(new_x, by, FUN = fun)
}
scale_x_reordered <- function(..., sep = "___") {
reg <- paste0(sep, ".+$")
ggplot2::scale_x_discrete(labels = function(x) gsub(reg, "", x), ...)
}
plot_varImp_bar_chart <- function (data) {
# Graph
ggplot(data, aes(color=variables, y=value, x=reorder_within(variables, value, models))) +
geom_point() +
geom_hline(yintercept=1, color="grey55", linetype="dashed") +
geom_errorbar(aes(ymin=value-sd, ymax=value+sd), width=.2,
position=position_dodge(0.05)) +
scale_x_reordered() +
facet_wrap(~models, nrow = 2, ncol = 2, scales = "free_y") +
xlab("") +
scale_color_manual(values=log.many_cols) +
coord_flip() + theme_Publication() +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text = element_text(size=10),
legend.position = "none")
}
# pL0L2 <- plot_varImp_bar_chart(data1[data1$models == "L0L2", ])
# pEN <- plot_varImp_bar_chart(data1[data1$models == "Elastic Net", ])
# pMUVR <- plot_varImp_bar_chart(data1[data1$models == "MUVR", ])
# pRRF <- plot_varImp_bar_chart(data1[data1$models == "RRF", ])
#
#
# gg1 <- ggarrange(pL0L2, pEN, pMUVR, pRRF,
#                  ncol = 2, nrow = 2)
gg1 <- plot_varImp_bar_chart(data1)
plot(gg1)
ggsave("BRCA_dep_scores_all_var_imp.pdf", gg1, width = 20, height = 20, units = "cm")
head(train)
registerDoSEQ()
cancers <- c("BRCA")
data <- train.balance_cancers(train.get_dataset("combined", cancers))
data$MUTEX <- NULL
vars <- colnames(data)
vars_no_dep <- vars[!grepl("(RNAi|CRISPR)", vars)]
cols_no_dep <- which(colnames(data) %in% vars_no_dep)
train_index <- createDataPartition(data$SL, p = .8,
list = FALSE,
times = 1)
train <- data[train_index, cols_no_dep]
test <- data[-train_index, cols_no_dep]
preProcValues <- caret::preProcess(train[5:ncol(train)], method = c("center", "scale", "nzv"))
# remove gene dependency scores
# train <- cbind(train[1:4], predict(preProcValues, train[5:ncol(train)]))
# test <- cbind(test[1:4], predict(preProcValues, test[5:ncol(test)]))
train <- cbind(train[1:4], predict(preProcValues, train))
test <- cbind(test[1:4], predict(preProcValues, test))
head(train)
registerDoSEQ()
cancers <- c("BRCA")
data <- train.balance_cancers(train.get_dataset("combined", cancers))
data$MUTEX <- NULL
vars <- colnames(data)
vars_no_dep <- vars[!grepl("(RNAi|CRISPR)", vars)]
cols_no_dep <- which(colnames(data) %in% vars_no_dep)
train_index <- createDataPartition(data$SL, p = .8,
list = FALSE,
times = 1)
# gene dependency scores
# train <- data[train_index, cols_no_dep]
# test <- data[-train_index, cols_no_dep]
train <- data[train_index, ]
test <- data[-train_index, ]
preProcValues <- caret::preProcess(train[5:ncol(train)], method = c("center", "scale", "nzv"))
# remove gene dependency scores
train <- cbind(train[1:4], predict(preProcValues, train[5:ncol(train)]))
test <- cbind(test[1:4], predict(preProcValues, test[5:ncol(test)]))
f <- train.get_formula(train)
#glmnet
models <- list()
models[["L0L2"]] <- train.l0l2(train[5:ncol(train)], train$SL)
models[["Elastic Net"]] <- train.logr(train, f)
models$MUVR <- train.MUVR(train)
models[["Random Forest"]] <- train.RRF(train, f)
imps <- list()
imps[["LOL2"]] <- log.plot_var_importance_and_ale_plots(models[["L0L2"]], test, "All", TRUE)
imps[["Elastic Net"]] <- log.plot_var_importance_and_ale_plots(models[["Elastic Net"]], test, "All", FALSE)
imps[["RRF"]] <- log.plot_var_importance_and_ale_plots(models[["Random Forest"]], test, "All", FALSE)
imps[["MUVR"]] <- log.plot_var_importance_and_ale_plots(models$MUVR$Fit$rfFitMax, test, "All", FALSE)
variables <- as.factor(c(imps$LOL2$feature, imps$`Elastic Net`$feature, imps$MUVR$feature, imps$RRF$feature))
models <- c(rep("L0L2" , nrow(imps$LOL2)), rep("Elastic Net" , nrow(imps$`Elastic Net`)), rep("MUVR" , nrow(imps$MUVR)), rep("RRF" , nrow(imps$RRF)))
value <- c(imps$LOL2$importance, imps$`Elastic Net`$importance, imps$MUVR$importance, imps$RRF$importance)
sd <- c(imps$LOL2$importance.95 - imps$LOL2$importance.05,
imps$`Elastic Net`$importance.95 - imps$`Elastic Net`$importance.05,
imps$MUVR$importance.95 - imps$MUVR$importance.05,
imps$RRF$importance.95 - imps$RRF$importance.05)
data1 <- data.frame(models,variables,value, sd)
reorder_within <- function(x, by, within, fun = max, sep = "___", ...) {
new_x <- paste(x, within, sep = sep)
stats::reorder(new_x, by, FUN = fun)
}
scale_x_reordered <- function(..., sep = "___") {
reg <- paste0(sep, ".+$")
ggplot2::scale_x_discrete(labels = function(x) gsub(reg, "", x), ...)
}
plot_varImp_bar_chart <- function (data) {
# Graph
ggplot(data, aes(color=variables, y=value, x=reorder_within(variables, value, models))) +
geom_point() +
geom_hline(yintercept=1, color="grey55", linetype="dashed") +
geom_errorbar(aes(ymin=value-sd, ymax=value+sd), width=.2,
position=position_dodge(0.05)) +
scale_x_reordered() +
facet_wrap(~models, nrow = 2, ncol = 2, scales = "free_y") +
xlab("") +
scale_color_manual(values=log.many_cols) +
coord_flip() + theme_Publication() +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text = element_text(size=10),
legend.position = "none")
}
# pL0L2 <- plot_varImp_bar_chart(data1[data1$models == "L0L2", ])
# pEN <- plot_varImp_bar_chart(data1[data1$models == "Elastic Net", ])
# pMUVR <- plot_varImp_bar_chart(data1[data1$models == "MUVR", ])
# pRRF <- plot_varImp_bar_chart(data1[data1$models == "RRF", ])
#
#
# gg1 <- ggarrange(pL0L2, pEN, pMUVR, pRRF,
#                  ncol = 2, nrow = 2)
gg1 <- plot_varImp_bar_chart(data1)
plot(gg1)
ggsave("BRCA_all_var_imp.pdf", gg1, width = 20, height = 20, units = "cm")
registerDoSEQ()
cancers <- c("LUAD")
data <- train.balance_cancers(train.get_dataset("combined", cancers))
data$MUTEX <- NULL
vars <- colnames(data)
vars_no_dep <- vars[!grepl("(RNAi|CRISPR)", vars)]
cols_no_dep <- which(colnames(data) %in% vars_no_dep)
train_index <- createDataPartition(data$SL, p = .8,
list = FALSE,
times = 1)
# gene dependency scores
# train <- data[train_index, cols_no_dep]
# test <- data[-train_index, cols_no_dep]
train <- data[train_index, ]
test <- data[-train_index, ]
preProcValues <- caret::preProcess(train[5:ncol(train)], method = c("center", "scale", "nzv"))
# remove gene dependency scores
train <- cbind(train[1:4], predict(preProcValues, train[5:ncol(train)]))
test <- cbind(test[1:4], predict(preProcValues, test[5:ncol(test)]))
f <- train.get_formula(train)
#glmnet
models <- list()
models[["L0L2"]] <- train.l0l2(train[5:ncol(train)], train$SL)
models[["Elastic Net"]] <- train.logr(train, f)
models$MUVR <- train.MUVR(train)
models[["Random Forest"]] <- train.RRF(train, f)
imps <- list()
imps[["LOL2"]] <- log.plot_var_importance_and_ale_plots(models[["L0L2"]], test, "All", TRUE)
imps[["Elastic Net"]] <- log.plot_var_importance_and_ale_plots(models[["Elastic Net"]], test, "All", FALSE)
imps[["RRF"]] <- log.plot_var_importance_and_ale_plots(models[["Random Forest"]], test, "All", FALSE)
imps[["MUVR"]] <- log.plot_var_importance_and_ale_plots(models$MUVR$Fit$rfFitMax, test, "All", FALSE)
variables <- as.factor(c(imps$LOL2$feature, imps$`Elastic Net`$feature, imps$MUVR$feature, imps$RRF$feature))
models <- c(rep("L0L2" , nrow(imps$LOL2)), rep("Elastic Net" , nrow(imps$`Elastic Net`)), rep("MUVR" , nrow(imps$MUVR)), rep("RRF" , nrow(imps$RRF)))
value <- c(imps$LOL2$importance, imps$`Elastic Net`$importance, imps$MUVR$importance, imps$RRF$importance)
sd <- c(imps$LOL2$importance.95 - imps$LOL2$importance.05,
imps$`Elastic Net`$importance.95 - imps$`Elastic Net`$importance.05,
imps$MUVR$importance.95 - imps$MUVR$importance.05,
imps$RRF$importance.95 - imps$RRF$importance.05)
data1 <- data.frame(models,variables,value, sd)
reorder_within <- function(x, by, within, fun = max, sep = "___", ...) {
new_x <- paste(x, within, sep = sep)
stats::reorder(new_x, by, FUN = fun)
}
scale_x_reordered <- function(..., sep = "___") {
reg <- paste0(sep, ".+$")
ggplot2::scale_x_discrete(labels = function(x) gsub(reg, "", x), ...)
}
plot_varImp_bar_chart <- function (data) {
# Graph
ggplot(data, aes(color=variables, y=value, x=reorder_within(variables, value, models))) +
geom_point() +
geom_hline(yintercept=1, color="grey55", linetype="dashed") +
geom_errorbar(aes(ymin=value-sd, ymax=value+sd), width=.2,
position=position_dodge(0.05)) +
scale_x_reordered() +
facet_wrap(~models, nrow = 2, ncol = 2, scales = "free_y") +
xlab("") +
scale_color_manual(values=log.many_cols) +
coord_flip() + theme_Publication() +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text = element_text(size=10),
legend.position = "none")
}
# pL0L2 <- plot_varImp_bar_chart(data1[data1$models == "L0L2", ])
# pEN <- plot_varImp_bar_chart(data1[data1$models == "Elastic Net", ])
# pMUVR <- plot_varImp_bar_chart(data1[data1$models == "MUVR", ])
# pRRF <- plot_varImp_bar_chart(data1[data1$models == "RRF", ])
#
#
# gg1 <- ggarrange(pL0L2, pEN, pMUVR, pRRF,
#                  ncol = 2, nrow = 2)
gg1 <- plot_varImp_bar_chart(data1)
plot(gg1)
ggsave("LUAD_all_var_imp.pdf", gg1, width = 20, height = 20, units = "cm")
